[versions]
app-applicationId = "me.tbsten.tripleTriad"
app-compileSdk = "35"
app-minSdk = "28"
app-targetSdk = "35"
app-versionCode = "1"
app-versionName = "1.0"

androidGradle = "8.8.0"
kotlin = "2.1.10"
ksp = "2.1.10-1.0.29"
coreKtx = "1.15.0"
junit = "4.13.2"
androidxJunit = "1.2.1"
kotlinxCoroutines = "1.10.1"
espressoCore = "3.6.1"
androidxLifecycle = "2.8.7"
andridxCoreSplashScreen = "1.0.1"
activityCompose = "1.10.1"
composeBom = "2025.03.01"
navigationCompose = "2.8.9"
kotlinx-serialization = "1.8.1"
hilt = "2.56.1"
hiltNavigationCompose = "1.2.0"
appcompat = "1.7.0"
room = "2.6.1"
roborazzi = "1.43.1"
datastore = "1.1.4"
robolectric = "4.14.1"
composePreviewScanner = "0.5.1"
slackComposeLint = "1.4.2"
mockk = "1.13.17"
retrofit = "2.11.0"
openApi = "7.10.0"
okhttp = "4.12.0"
timber = "5.0.1"
tart = "1.4.0"
arrowKt = "2.0.1"
lumoUi = "1.1.1"

ktlintGradlePlugin = "12.1.2"
detekt = "1.23.7"

[libraries]
# TODO 並び順を build-logic用 > 通常のライブラリ にする
androidxCoreKtx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
junit = { module = "junit:junit", version.ref = "junit" }
kotlinTestJunit = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlinxCoroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
androidxJunit = { module = "androidx.test.ext:junit", version.ref = "androidxJunit" }
androidxEspressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
androidxLifecycleRuntimeKtx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidxLifecycleViewModelKtx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }
andridxCoreSplashScreen = { module = "androidx.core:core-splashscreen", version.ref = "andridxCoreSplashScreen" }
activityCompose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
composeBom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
composeFoundation = { module = "androidx.compose.foundation:foundation" }
composeFoundationLayout = { module = "androidx.compose.foundation:foundation-layout" }
composeUi = { module = "androidx.compose.ui:ui" }
composeUiGraphics = { module = "androidx.compose.ui:ui-graphics" }
composeUiUtil = { module = "androidx.compose.ui:ui-util" }
composeUiTooling = { module = "androidx.compose.ui:ui-tooling" }
composeUiToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview" }
composeUiTestManifest = { module = "androidx.compose.ui:ui-test-manifest" }
composeUiTestJunit4 = { module = "androidx.compose.ui:ui-test-junit4" }
composeMaterialRipple = { module = "androidx.compose.material:material-ripple" }
composeMaterialIconsExtended = { module = "androidx.compose.material:material-icons-extended" }
navigationCompose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
kotlinxSerializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
hiltAndroid = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hiltCompiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hiltNavigationCompose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }
roomRuntime = { module = "androidx.room:room-runtime", version.ref = "room" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "room" }
roomKtx = { module = "androidx.room:room-ktx", version.ref = "room" }
datastorePreferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
roborazziCore = { module = "io.github.takahirom.roborazzi:roborazzi", version.ref = "roborazzi" }
roborazziCompose = { module = "io.github.takahirom.roborazzi:roborazzi-compose", version.ref = "roborazzi" }
roborazziJunit = { module = "io.github.takahirom.roborazzi:roborazzi-junit-rule", version.ref = "roborazzi" }
roborazziComposePreviewScannerSupport = { module = "io.github.takahirom.roborazzi:roborazzi-compose-preview-scanner-support", version.ref = "roborazzi" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
composePreviewScanner = { module = "io.github.sergio-sastre.ComposablePreviewScanner:android", version.ref = "composePreviewScanner" }
slackComposeLint = { module = "com.slack.lint.compose:compose-lint-checks", version.ref = "slackComposeLint" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitConverterScalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit" }
retrofitConverterKotlinxSerialization = { module = "com.squareup.retrofit2:converter-kotlinx-serialization", version.ref = "retrofit" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttpLoggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
tartCore = { module = "io.yumemi.tart:tart-core", version.ref = "tart" }
tartCompose = { module = "io.yumemi.tart:tart-compose", version.ref = "tart" }
tartLogging = { module = "io.yumemi.tart:tart-logging", version.ref = "tart" }
arrowKtOptics = { module = "io.arrow-kt:arrow-optics", version.ref = "arrowKt" }
arrowKtOpticsKspPlugin = { module = "io.arrow-kt:arrow-optics-ksp-plugin", version.ref = "arrowKt" }

# build-logic
kotlinGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlinGradlePluginApi = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin-api", version.ref = "kotlin" }
androidGradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "androidGradle" }
ktlintGradlePlugin = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktlintGradlePlugin" }
detektGradlePlugin = { module = "io.gitlab.arturbosch.detekt:io.gitlab.arturbosch.detekt.gradle.plugin", version.ref = "detekt" }
composeGradlePlugin = { module = "org.jetbrains.kotlin.plugin.compose:org.jetbrains.kotlin.plugin.compose.gradle.plugin", version.ref = "kotlin" }
roborazziGradlePlugin = { module = "io.github.takahirom.roborazzi:roborazzi-gradle-plugin", version.ref = "roborazzi" }
roomGradlePlugin = { module = "androidx.room:room-gradle-plugin", version.ref = "room" }
openApiGradlePlugin = { module = "org.openapitools:openapi-generator-gradle-plugin", version.ref = "openApi" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "androidGradle" }
androidLibrary = { id = "com.android.library", version.ref = "androidGradle" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinCompose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinPluginSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
roborazzi = { id = "io.github.takahirom.roborazzi", version.ref = "roborazzi" }
room = { id = "androidx.room", version.ref = "room" }
openApi = { id = "org.openapi.generator", version.ref = "openApi" }
lumoUi = { id = "com.nomanr.plugin.lumo", version.ref = "lumoUi" }

ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlintGradlePlugin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }

buildLogicModuleAndroidApplication = { id = "buildLogic.module.android.application", version = "unspecified" }
buildLogicModuleAndroidLibrary = { id = "buildLogic.module.android.library", version = "unspecified" }
buildLogicModuleFeature = { id = "buildLogic.module.feature", version = "unspecified" }
buildLogicPrimitiveLint = { id = "buildLogic.primitive.lint", version = "unspecified" }
buildLogicPrimitiveCompose = { id = "buildLogic.primitive.compose", version = "unspecified" }
buildLogicPrimitiveNavigationCompose = { id = "buildLogic.primitive.navigation.compose", version = "unspecified" }
buildLogicPrimitiveKotlinxSerialization = { id = "buildLogic.primitive.kotlinx.serialization", version = "unspecified" }
buildLogicPrimitiveHilt = { id = "buildLogic.primitive.hilt", version = "unspecified" }
buildLogicPrimitiveRoom = { id = "buildLogic.primitive.room", version = "unspecified" }
buildLogicPrimitiveRobolectric = { id = "buildLogic.primitive.robolectric", version = "unspecified" }
buildLogicPrimitiveRoborazzi = { id = "buildLogic.primitive.roborazzi", version = "unspecified" }
buildLogicPrimitiveOpenApi = { id = "buildLogic.primitive.open.api", version = "unspecified" }
